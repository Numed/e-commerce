{"version":3,"file":"static/js/551.490c79d1.chunk.js","mappings":"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","sources":["helpers/index.jsx","features/MainPage/Header/styles.jsx","features/MainPage/Header/index.jsx","features/MainPage/Content/styles.jsx","features/MainPage/Content/index.jsx","pages/Main/index.jsx"],"sourcesContent":["import { useState, useRef, useMemo } from \"react\";\r\n\r\nexport const useHover = () => {\r\n  const [hovered, setHovered] = useState(false);\r\n  const hoveredCard = useRef(null);\r\n\r\n  const eventHandlers = useMemo(\r\n    () => ({\r\n      // eslint-disable-next-line\r\n      onMouseOver: (e) => (setHovered(true), (hoveredCard.current = e.target)),\r\n      // eslint-disable-next-line\r\n      onMouseOut: () => (setHovered(false), (hoveredCard.current = null)),\r\n    }),\r\n    [setHovered]\r\n  );\r\n\r\n  return [hovered, eventHandlers, hoveredCard];\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from \"../../../img/logo.webp\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const HeaderInner = styled.div`\r\n  position: absolute;\r\n  z-index: 111;\r\n  height: 250px;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 150px;\r\n`;\r\n\r\nexport const Logo = styled(Link)`\r\n  min-width: 122px;\r\n  min-height: 80px;\r\n  background: url(${logo}) no-repeat center;\r\n  background-size: cover;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 20px;\r\n  line-height: 26px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 5px;\r\n  text-align: end;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.8;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const LinkButton = styled.a`\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.8;\r\n  transition: all 0.2s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const StyledSwiper = styled(Swiper)`\r\n  height: 650px;\r\n`;\r\n\r\nexport const StyledSlide = styled(SwiperSlide)`\r\n  & > img {\r\n    width: 100%;\r\n    max-height: 450px;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n\r\nexport const SlideTextContainer = styled.div`\r\n  margin: 40px 25px;\r\n`;\r\n\r\nexport const SlideTitle = styled.h3`\r\n  font-weight: 400;\r\n  font-size: 28px;\r\n  line-height: 35px;\r\n  letter-spacing: 1.4px;\r\n  text-transform: uppercase;\r\n  color: #6f6f6f;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nexport const SlideSubtitle = styled.h4`\r\n  font-family: \"Karla\";\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 27px;\r\n  color: #6f6f6f;\r\n  max-width: 880px;\r\n`;\r\n","import { useContext } from \"react\";\r\nimport { Pagination, Navigation as Nav, Parallax, Autoplay } from \"swiper\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\n\r\nimport {\r\n  StyledSwiper,\r\n  StyledSlide,\r\n  SlideTextContainer,\r\n  SlideTitle,\r\n  SlideSubtitle,\r\n  HeaderContainer,\r\n  StyledLink,\r\n  Logo,\r\n  NavList,\r\n  ListItem,\r\n  Navigation,\r\n  HeaderInner,\r\n  LinkButton,\r\n} from \"./styles\";\r\nimport { headerImages, navLinks } from \"../../Constants\";\r\nimport { PopupContext } from \"../../../features/Context\";\r\n\r\nconst MainPageHeader = () => {\r\n  const { setOpenPopup, setClickedLink } = useContext(PopupContext);\r\n  return (\r\n    <>\r\n      <HeaderContainer>\r\n        <HeaderInner>\r\n          <Logo to=\"/\" />\r\n          <Navigation>\r\n            <NavList>\r\n              {navLinks.map(({ id, title, path, isButton }) => {\r\n                return (\r\n                  <ListItem key={id}>\r\n                    {isButton === true ? (\r\n                      <LinkButton\r\n                        onClick={(e) => (\r\n                          setOpenPopup(true),\r\n                          setClickedLink(e.target.textContent)\r\n                        )}\r\n                      >\r\n                        {title}\r\n                      </LinkButton>\r\n                    ) : (\r\n                      <StyledLink to={path} onClick={() => setOpenPopup(false)}>\r\n                        {title}\r\n                      </StyledLink>\r\n                    )}\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </NavList>\r\n          </Navigation>\r\n        </HeaderInner>\r\n      </HeaderContainer>\r\n      <StyledSwiper\r\n        style={{\r\n          \"--swiper-navigation-color\": \"#6f6f6f\",\r\n          \"--swiper-pagination-color\": \"#5b5b5b\",\r\n        }}\r\n        speed={600}\r\n        parallax={true}\r\n        autoplay={{\r\n          delay: 3500,\r\n          disableOnInteraction: false,\r\n        }}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        navigation={true}\r\n        modules={[Autoplay, Parallax, Pagination, Nav]}\r\n        className=\"mySwiper\"\r\n      >\r\n        {headerImages.map(({ id, image, alt, title, subtitle }) => {\r\n          return (\r\n            <StyledSlide key={id}>\r\n              <img className=\"swiper-image\" src={image} alt={alt} />\r\n              <SlideTextContainer>\r\n                <SlideTitle className=\"title\" data-swiper-parallax=\"-300\">\r\n                  {title}\r\n                </SlideTitle>\r\n                <SlideSubtitle className=\"subtitle\" data-swiper-parallax=\"-200\">\r\n                  {subtitle}\r\n                </SlideSubtitle>\r\n              </SlideTextContainer>\r\n            </StyledSlide>\r\n          );\r\n        })}\r\n      </StyledSwiper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPageHeader;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SectionChapter = styled.span`\r\n  font-family: \"Karla\";\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 27px;\r\n  color: #6f6f6f;\r\n  margin: 0 0 5px 125px;\r\n`;\r\n\r\nexport const CardsSection = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 120px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 20px 20px 20px;\r\n  background: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const CardMask = styled.div`\r\n  position: relative;\r\n  transition: all 0.25s linear;\r\n  height: 100%;\r\n`;\r\n\r\nexport const CardActions = styled.div`\r\n  background-color: none;\r\n  width: 100%;\r\n  z-index: 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  position: absolute;\r\n  transition: all 0.25s linear;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.75);\r\n  }\r\n`;\r\n\r\nexport const ActionButton = styled(Link)`\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 23px;\r\n  letter-spacing: 0.7px;\r\n  text-transform: uppercase;\r\n  color: #ffffff;\r\n  text-decoration: none;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 2px;\r\n    border-bottom: 1px solid #eee;\r\n    opacity: 0;\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  &:hover::after {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const CardImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  pointer-events: none;\r\n  display: block;\r\n`;\r\n\r\nexport const CardTextContainer = styled.div`\r\n  margin-top: 25px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const CardBrand = styled.h5`\r\n  font-family: \"Karla\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 23px;\r\n  color: #6f6f6f;\r\n`;\r\n\r\nexport const CardTitle = styled.h4`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 16px;\r\n  letter-spacing: 0.8px;\r\n  text-transform: uppercase;\r\n  color: #393939;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const CardPrice = styled.span`\r\n  font-family: \"Karla\";\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 18px;\r\n  color: #6f6f6f;\r\n`;\r\n","import { useState, useContext } from \"react\";\r\n\r\nimport { mainCardsList } from \"../../../features/Constants\";\r\nimport {\r\n  Card,\r\n  CardBrand,\r\n  CardPrice,\r\n  CardImg,\r\n  CardTextContainer,\r\n  CardTitle,\r\n  CardsSection,\r\n  SectionChapter,\r\n  CardMask,\r\n  ActionButton,\r\n  CardActions,\r\n} from \"./styles\";\r\nimport { useHover } from \"../../../helpers\";\r\nimport NavPopup from \"../../../components/NavPopup\";\r\nimport { PopupContext } from \"../../Context\";\r\nimport Masonry from \"react-masonry-css\";\r\n\r\nconst Content = () => {\r\n  const [cardList, setCardList] = useState([...mainCardsList]);\r\n\r\n  const { isOpenPopup } = useContext(PopupContext);\r\n  const [isHovered, eventHandlers, hoveredCard] = useHover();\r\n\r\n  return (\r\n    <>\r\n      <SectionChapter>Featured Products</SectionChapter>\r\n      <CardsSection>\r\n        {isOpenPopup ? <NavPopup /> : null}\r\n        <Masonry\r\n          breakpointCols={{ default: 3, 700: 2, 350: 1 }}\r\n          className=\"my-masonry-grid\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n        >\r\n          {cardList.map(({ id, image, title, brand, price, alt }) => {\r\n            return (\r\n              <Card key={id}>\r\n                <CardMask {...eventHandlers}>\r\n                  {isHovered &&\r\n                  hoveredCard.current?.children[0]?.alt === title ? (\r\n                    <CardActions>\r\n                      <ActionButton to={`/${id}`}>Choose option</ActionButton>\r\n                    </CardActions>\r\n                  ) : null}\r\n                  <CardImg src={image} alt={alt} />\r\n                </CardMask>\r\n                <CardTextContainer>\r\n                  <CardBrand>{brand}</CardBrand>\r\n                  <CardTitle>{title}</CardTitle>\r\n                  <CardPrice>{price}</CardPrice>\r\n                </CardTextContainer>\r\n              </Card>\r\n            );\r\n          })}\r\n        </Masonry>\r\n      </CardsSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import Footer from \"../../components/Footer\";\r\nimport FooterNav from \"../../components/FooterNav\";\r\nimport MainPageHeader from \"../../features/MainPage/Header\";\r\nimport MainPageContent from \"../../features/MainPage/Content\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <MainPageHeader />\r\n      <MainPageContent />\r\n      <FooterNav />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["useHover","_useState","useState","_useState2","_slicedToArray","hovered","setHovered","hoveredCard","useRef","useMemo","onMouseOver","e","current","target","onMouseOut","HeaderContainer","styled","_templateObject","_taggedTemplateLiteral","HeaderInner","_templateObject2","Logo","Link","_templateObject3","logo","Navigation","_templateObject4","NavList","_templateObject5","ListItem","_templateObject6","StyledLink","_templateObject7","LinkButton","_templateObject8","StyledSwiper","Swiper","_templateObject9","StyledSlide","SwiperSlide","_templateObject10","SlideTextContainer","_templateObject11","SlideTitle","_templateObject12","SlideSubtitle","_templateObject13","_useContext","useContext","PopupContext","setOpenPopup","setClickedLink","_jsxs","_Fragment","children","_jsx","to","navLinks","_ref","id","title","path","isButton","onClick","textContent","style","speed","parallax","autoplay","delay","disableOnInteraction","pagination","clickable","navigation","modules","Autoplay","Parallax","Pagination","Nav","className","headerImages","_ref2","image","alt","subtitle","src","SectionChapter","CardsSection","Card","CardMask","CardActions","ActionButton","CardImg","CardTextContainer","CardBrand","CardTitle","CardPrice","_toConsumableArray","mainCardsList","cardList","isOpenPopup","_useHover","_useHover2","isHovered","eventHandlers","NavPopup","Masonry","breakpointCols","default","columnClassName","map","_hoveredCard$current","_hoveredCard$current$","brand","price","_objectSpread","concat","MainPageHeader","MainPageContent","FooterNav","Footer"],"sourceRoot":""}