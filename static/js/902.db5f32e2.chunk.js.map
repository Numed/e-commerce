{"version":3,"file":"static/js/902.db5f32e2.chunk.js","mappings":"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","sources":["components/Header/styles.jsx","components/Header/index.jsx","components/HeaderNav/styles.jsx","components/HeaderNav/index.jsx","components/Layout/index.jsx","components/PageSection/styles.jsx","components/PageSection/index.jsx","features/Contact/styles.jsx","helpers/formik.jsx","features/Contact/validationSchema.jsx","features/Contact/index.jsx","pages/Contact/index.jsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from \"../../img/logo.webp\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #fff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 55px 170px;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  min-width: 122px;\r\n  min-height: 80px;\r\n  background: url(${logo}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 20px;\r\n  line-height: 26px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 5px;\r\n  text-align: end;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.9;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const LinkButton = styled.a`\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.9;\r\n  transition: all 0.2s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { useContext } from \"react\";\r\n\r\nimport {\r\n  HeaderContainer,\r\n  NavList,\r\n  Navigation,\r\n  ListItem,\r\n  Logo,\r\n  StyledLink,\r\n  LinkButton,\r\n} from \"./styles\";\r\nimport { navLinks } from \"../../features/Constants\";\r\nimport { PopupContext } from \"../../features/Context\";\r\n\r\nconst Header = () => {\r\n  const { setOpenPopup, setClickedLink } = useContext(PopupContext);\r\n  return (\r\n    <HeaderContainer>\r\n      <StyledLink to=\"/\">\r\n        <Logo />\r\n      </StyledLink>\r\n      <Navigation>\r\n        <NavList>\r\n          {navLinks.map(({ id, title, path, isButton }) => {\r\n            return (\r\n              <ListItem key={id}>\r\n                {isButton === true ? (\r\n                  <LinkButton\r\n                    onClick={(e) => (\r\n                      setOpenPopup(true), setClickedLink(e.target.textContent)\r\n                    )}\r\n                  >\r\n                    {title}\r\n                  </LinkButton>\r\n                ) : (\r\n                  <StyledLink to={path} onClick={() => setOpenPopup(false)}>\r\n                    {title}\r\n                  </StyledLink>\r\n                )}\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </NavList>\r\n      </Navigation>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HeaderNavContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 25px 175px;\r\n  border-bottom: 1px solid #dadada;\r\n  border-top: 1px solid #dadada;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-weight: 400;\r\n  font-size: 26px;\r\n  line-height: 32px;\r\n  letter-spacing: 1.3px;\r\n  text-transform: uppercase;\r\n\r\n  color: #393939;\r\n`;\r\n\r\nexport const Cranches = styled.div`\r\n  height: auto;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-family: \"Karla\", sans-serif;\r\n  font-size: 16px;\r\n  line-heigth: 27px;\r\n  font-weigth: 400;\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.9;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { pathes } from \"../../features/Constants\";\r\nimport { HeaderNavContainer, Title, Cranches, StyledLink } from \"./styles\";\r\n\r\nconst HeaderNav = ({ title = \"Products\" }) => {\r\n  const { path } = pathes.find((el) => el.title === title);\r\n  return (\r\n    <HeaderNavContainer>\r\n      <Title>\r\n        {title === \"Error\" ? \"404 \" + title + \" — Page Not Found\" : title}\r\n      </Title>\r\n      <Cranches>\r\n        <StyledLink to=\"/\">Home</StyledLink>\r\n        {\" > \"}\r\n        <StyledLink to={path}>{title}</StyledLink>\r\n      </Cranches>\r\n    </HeaderNavContainer>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import { useContext } from \"react\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport HeaderNav from \"../../components/HeaderNav\";\r\nimport FooterNav from \"../../components/FooterNav\";\r\nimport Footer from \"../../components/Footer\";\r\nimport NavPopup from \"../NavPopup\";\r\nimport { PopupContext } from \"../../features/Context\";\r\n\r\nconst Layout = ({ children, navTitle }) => {\r\n  const { isOpenPopup } = useContext(PopupContext);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <HeaderNav title={navTitle} />\r\n      {isOpenPopup ? <NavPopup /> : null}\r\n      {children}\r\n      <FooterNav />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SectionContainer = styled.div`\r\n  width: 305px;\r\n  height: auto;\r\n`;\r\n\r\nexport const SectionTitle = styled.h4`\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  line-height: 25px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  color: #393939;\r\n  border-bottom: 1px solid #dadada;\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nexport const LinksList = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 27px;\r\n  color: #6f6f6f;\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  opacity: 0.8;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import {\r\n  SectionContainer,\r\n  SectionTitle,\r\n  StyledLink,\r\n  LinksList,\r\n} from \"./styles\";\r\n\r\nconst PageSection = () => {\r\n  return (\r\n    <SectionContainer>\r\n      <SectionTitle>Pages</SectionTitle>\r\n      <LinksList>\r\n        <StyledLink to=\"/info\">About</StyledLink>\r\n        <StyledLink to=\"/contact\">Contact</StyledLink>\r\n      </LinksList>\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default PageSection;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SectionContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 50px 0;\r\n  padding: 0 150px;\r\n`;\r\n\r\nexport const SectionInner = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  -webkit-box-align: center;\r\n  align-items: flex-start;\r\n  flex-direction: row-reverse;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContentText = styled.p`\r\n  font-family: \"Karla\";\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 27px;\r\n  max-width: 750px;\r\n  color: #6f6f6f;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const FormSection = styled.div`\r\n  width: 30%;\r\n  height: auto;\r\n`;\r\n\r\nexport const FormTextarea = styled.textarea`\r\n  background: #ffffff;\r\n  border: 1px solid #dadada;\r\n  border-radius: 3px;\r\n  margin-right: 15px;\r\n  outline-color: #8abdf9;\r\n  padding: 10px;\r\n  width: 705px;\r\n  height: 150px;\r\n  resize: vertical;\r\n`;\r\n","import { useField } from \"formik\";\r\nimport { FormTextarea } from \"../features/Contact/styles\";\r\n\r\nexport const FormikTextarea = ({ ...props }) => {\r\n  const [field] = useField(props);\r\n  return <FormTextarea {...field} {...props} />;\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nexport const ContactSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Full name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  phone: Yup.string().required(\"Phone number is required\"),\r\n  orderNumber: Yup.string(),\r\n  question: Yup.string().required(\"Enter some text here before submiting\"),\r\n});\r\n","import { Formik } from \"formik\";\r\n\r\nimport {\r\n  SectionContainer,\r\n  SectionInner,\r\n  ContentText,\r\n  FormSection,\r\n} from \"./styles\";\r\n\r\nimport {\r\n  InputError,\r\n  InputContainer,\r\n  InputGroup,\r\n  LabelInner,\r\n  FormInput,\r\n  FormLabel,\r\n  BtnSubmit,\r\n} from \"../../styles\";\r\n\r\nimport PageSection from \"../../components/PageSection\";\r\nimport { ContactSchema } from \"./validationSchema\";\r\nimport { FormikTextarea } from \"../../helpers/formik\";\r\n\r\nconst ContactContent = () => {\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <SectionContainer>\r\n      <ContentText>\r\n        Want your customers to be able to get in touch with you easily? This\r\n        clean, simple form does just that.\r\n      </ContentText>\r\n      <SectionInner>\r\n        <PageSection />\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            name: \"\",\r\n            phone: \"\",\r\n            orderNumber: \"\",\r\n            question: \"\",\r\n          }}\r\n          validationSchema={ContactSchema}\r\n          onSubmit={(values) => {\r\n            onSubmit(values);\r\n          }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <FormSection>\r\n              <InputGroup>\r\n                <InputContainer>\r\n                  <LabelInner>\r\n                    <FormLabel>\r\n                      Full Name <span>*</span>\r\n                    </FormLabel>\r\n                    {errors.name && touched.name ? (\r\n                      <InputError>{errors.name}</InputError>\r\n                    ) : null}\r\n                    <FormInput\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder=\"Full Name\"\r\n                      required\r\n                    />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n                <InputContainer>\r\n                  <LabelInner>\r\n                    <FormLabel>\r\n                      Email Address <span>*</span>\r\n                    </FormLabel>\r\n                    {errors.email && touched.email ? (\r\n                      <InputError>{errors.email}</InputError>\r\n                    ) : null}\r\n                    <FormInput\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      placeholder=\"Email Address\"\r\n                      required\r\n                    />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <InputContainer>\r\n                  <LabelInner>\r\n                    <FormLabel>Phone Number</FormLabel>\r\n                    {errors.phone && touched.phone ? (\r\n                      <InputError>{errors.phone}</InputError>\r\n                    ) : null}\r\n                    <FormInput\r\n                      type=\"tel\"\r\n                      name=\"phone\"\r\n                      placeholder=\"Phone Number\"\r\n                      required\r\n                    />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n                <InputContainer>\r\n                  <LabelInner>\r\n                    <FormLabel>Order Number</FormLabel>\r\n                    {errors.orderNumber && touched.orderNumber ? (\r\n                      <InputError>{errors.orderNumber}</InputError>\r\n                    ) : null}\r\n                    <FormInput\r\n                      type=\"text\"\r\n                      name=\"orderNumber\"\r\n                      placeholder=\"Order Number\"\r\n                      required\r\n                    />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n              </InputGroup>\r\n              <InputContainer>\r\n                <LabelInner>\r\n                  <FormLabel>\r\n                    Comments/Questions <span>*</span>\r\n                  </FormLabel>\r\n                  {errors.question && touched.question ? (\r\n                    <InputError>{errors.question}</InputError>\r\n                  ) : null}\r\n                  <FormikTextarea name=\"question\" required />\r\n                </LabelInner>\r\n              </InputContainer>\r\n              <BtnSubmit>Submit Message</BtnSubmit>\r\n            </FormSection>\r\n          )}\r\n        </Formik>\r\n      </SectionInner>\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default ContactContent;\r\n","import Layout from \"../../components/Layout\";\r\nimport ContactContent from \"../../features/Contact\";\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <Layout navTitle=\"Contact\">\r\n      <ContactContent />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}"],"names":["HeaderContainer","styled","_templateObject","_taggedTemplateLiteral","Logo","_templateObject2","logo","Navigation","_templateObject3","NavList","_templateObject4","ListItem","_templateObject5","StyledLink","Link","_templateObject6","LinkButton","_templateObject7","_useContext","useContext","PopupContext","setOpenPopup","setClickedLink","_jsxs","children","_jsx","to","navLinks","_ref","id","title","path","isButton","onClick","e","target","textContent","HeaderNavContainer","Title","Cranches","_ref$title","pathes","el","navTitle","isOpenPopup","_Fragment","Header","HeaderNav","NavPopup","FooterNav","Footer","SectionContainer","SectionTitle","LinksList","SectionInner","ContentText","FormSection","FormTextarea","FormikTextarea","props","Object","assign","_objectDestructuringEmpty","_useField","useField","field","_slicedToArray","_objectSpread","ContactSchema","Yup","shape","name","required","email","phone","orderNumber","question","PageSection","Formik","initialValues","validationSchema","onSubmit","values","data","console","log","errors","touched","InputGroup","InputContainer","LabelInner","FormLabel","InputError","FormInput","type","placeholder","BtnSubmit","Layout","ContactContent","obj","TypeError"],"sourceRoot":""}