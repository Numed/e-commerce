{"version":3,"file":"static/js/511.d12f7053.chunk.js","mappings":"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","sources":["components/Header/styles.jsx","components/Header/index.jsx","components/HeaderNav/styles.jsx","components/HeaderNav/index.jsx","components/Layout/index.jsx","features/CheckoutContent/styles.jsx","features/CheckoutContent/validationSchema.jsx","features/CheckoutContent/index.jsx","pages/Checkout/index.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from \"../../img/logo.webp\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: #fff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 55px 170px;\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  min-width: 122px;\r\n  min-height: 80px;\r\n  background: url(${logo}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  list-style: none;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  font-size: 20px;\r\n  line-height: 26px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 5px;\r\n  text-align: end;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.9;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const LinkButton = styled.a`\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.9;\r\n  transition: all 0.2s linear;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { useContext } from \"react\";\r\n\r\nimport {\r\n  HeaderContainer,\r\n  NavList,\r\n  Navigation,\r\n  ListItem,\r\n  Logo,\r\n  StyledLink,\r\n  LinkButton,\r\n} from \"./styles\";\r\nimport { navLinks } from \"../../features/Constants\";\r\nimport { PopupContext } from \"../../features/Context\";\r\n\r\nconst Header = () => {\r\n  const { setOpenPopup, setClickedLink } = useContext(PopupContext);\r\n  return (\r\n    <HeaderContainer>\r\n      <StyledLink to=\"/\">\r\n        <Logo />\r\n      </StyledLink>\r\n      <Navigation>\r\n        <NavList>\r\n          {navLinks.map(({ id, title, path, isButton }) => {\r\n            return (\r\n              <ListItem key={id}>\r\n                {isButton === true ? (\r\n                  <LinkButton\r\n                    onClick={(e) => (\r\n                      setOpenPopup(true), setClickedLink(e.target.textContent)\r\n                    )}\r\n                  >\r\n                    {title}\r\n                  </LinkButton>\r\n                ) : (\r\n                  <StyledLink to={path} onClick={() => setOpenPopup(false)}>\r\n                    {title}\r\n                  </StyledLink>\r\n                )}\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </NavList>\r\n      </Navigation>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const HeaderNavContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 25px 175px;\r\n  border-bottom: 1px solid #dadada;\r\n  border-top: 1px solid #dadada;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  font-weight: 400;\r\n  font-size: 26px;\r\n  line-height: 32px;\r\n  letter-spacing: 1.3px;\r\n  text-transform: uppercase;\r\n\r\n  color: #393939;\r\n`;\r\n\r\nexport const Cranches = styled.div`\r\n  height: auto;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-family: \"Karla\", sans-serif;\r\n  font-size: 16px;\r\n  line-heigth: 27px;\r\n  font-weigth: 400;\r\n  text-decoration: none;\r\n  color: #393939;\r\n  opacity: 0.9;\r\n  transition: all 0.2s linear;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { pathes } from \"../../features/Constants\";\r\nimport { HeaderNavContainer, Title, Cranches, StyledLink } from \"./styles\";\r\n\r\nconst HeaderNav = ({ title = \"Products\" }) => {\r\n  const { path } = pathes.find((el) => el.title === title);\r\n  return (\r\n    <HeaderNavContainer>\r\n      <Title>\r\n        {title === \"Error\" ? \"404 \" + title + \" — Page Not Found\" : title}\r\n      </Title>\r\n      <Cranches>\r\n        <StyledLink to=\"/\">Home</StyledLink>\r\n        {\" > \"}\r\n        <StyledLink to={path}>{title}</StyledLink>\r\n      </Cranches>\r\n    </HeaderNavContainer>\r\n  );\r\n};\r\n\r\nexport default HeaderNav;\r\n","import { useContext } from \"react\";\r\n\r\nimport Header from \"../../components/Header\";\r\nimport HeaderNav from \"../../components/HeaderNav\";\r\nimport FooterNav from \"../../components/FooterNav\";\r\nimport Footer from \"../../components/Footer\";\r\nimport NavPopup from \"../NavPopup\";\r\nimport { PopupContext } from \"../../features/Context\";\r\n\r\nconst Layout = ({ children, navTitle }) => {\r\n  const { isOpenPopup } = useContext(PopupContext);\r\n  return (\r\n    <>\r\n      <Header />\r\n      <HeaderNav title={navTitle} />\r\n      {isOpenPopup ? <NavPopup /> : null}\r\n      {children}\r\n      <FooterNav />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"styled-components\";\r\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\r\n\r\nexport const SectionContainer = styled.section`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin: 40px 0;\r\n`;\r\n\r\nexport const SectionSubtitle = styled.h4`\r\n  width: 50%;\r\n  font-family: \"Karla\";\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 23px;\r\n  letter-spacing: 0.7px;\r\n  color: #393939;\r\n  margin: 20px 0 10px;\r\n`;\r\n\r\nexport const FormSection = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nexport const StyledCountryDropdown = styled(CountryDropdown)`\r\n  background: #ffffff;\r\n  border: 1px solid #dadada;\r\n  border-radius: 3px;\r\n  margin-right: 15px;\r\n  padding: 10px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledRegionDropdown = styled(RegionDropdown)`\r\n  background: #ffffff;\r\n  border: 1px solid #dadada;\r\n  border-radius: 3px;\r\n  margin-right: 15px;\r\n  padding: 10px;\r\n  min-width: 325px;\r\n  width: 100%;\r\n`;","import * as Yup from \"yup\";\r\n\r\nexport const ShippingSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"First name is required\"),\r\n  lastName: Yup.string().required(\"Last name is required\"),\r\n  line1: Yup.string().required(\"Enter your Address\"),\r\n  line2: Yup.string(),\r\n  company: Yup.string(),\r\n  city: Yup.string().required(\"Select your city/suburb\"),\r\n  zip: Yup.string().required(\"Select your zip/postcode\"),\r\n  phone: Yup.string().required(\"Phone number is required\"),\r\n});\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  SectionContainer,\r\n  StyledRegionDropdown,\r\n  StyledCountryDropdown,\r\n  FormSection,\r\n  SectionSubtitle,\r\n} from \"./styles\";\r\nimport {\r\n  InputError,\r\n  InputContainer,\r\n  InputGroup,\r\n  InputSection,\r\n  LabelInner,\r\n  FormInput,\r\n  FormLabel,\r\n  BtnSubmit,\r\n} from \"../../styles\";\r\nimport { ShippingSchema } from \"./validationSchema\";\r\nimport useRequestService from \"../../service\";\r\nimport { notifyError, notifySuccses } from \"../../helpers/notify\";\r\nimport { CartContext } from \"../Context\";\r\n\r\nconst CheckoutContent = () => {\r\n  const [country, setCountry] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [cartItemsTitle, setCartItemsTitle] = useState([]);\r\n  const [userInfo, setUserInfo] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address1: \"\",\r\n    address2: \"\",\r\n    company: \"\",\r\n    city: \"\",\r\n    zip: \"\",\r\n    phone: \"\",\r\n  });\r\n  const { getUserInfo, createOrder } = useRequestService();\r\n  const { total } = useContext(CartContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    onCheckUser();\r\n    onGetTitles();\r\n  }, []);\r\n\r\n  const onSubmit = (data) => {\r\n    const orderData = {\r\n      items: cartItemsTitle.toString(),\r\n      address:\r\n        country +\r\n        \", \" +\r\n        state +\r\n        \", \" +\r\n        data.city +\r\n        \", \" +\r\n        data.line1 +\r\n        \", \" +\r\n        data.zip,\r\n      phone: data.phone,\r\n      fullName: data.firstName + \" \" + data.lastName,\r\n      totalPrice: total,\r\n    };\r\n    createOrder(orderData).then(onCreate).catch(onError);\r\n  };\r\n\r\n  const onGetTitles = () => {\r\n    if (localStorage.getItem(\"cart\") !== null) {\r\n      const itemsTitle = JSON.parse(localStorage.getItem(\"cart\"));\r\n      let titles = itemsTitle.map((el) => {\r\n        return el.title;\r\n      });\r\n      setCartItemsTitle(titles);\r\n    }\r\n  };\r\n\r\n  const onCheckUser = () => {\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      getUserInfo(jwt_decode(localStorage.getItem(\"token\")).user_id)\r\n        .then(onResolve)\r\n        .catch(onError);\r\n    }\r\n  };\r\n\r\n  const onCreate = (data) => {\r\n    notifySuccses(data.message);\r\n    localStorage.removeItem(\"cart\");\r\n    setTimeout(() => {\r\n      return navigate(\"/\");\r\n    }, 2000);\r\n  };\r\n\r\n  const onResolve = (data) => {\r\n    setUserInfo({\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n      address1: data.address1,\r\n      address2: data.address2,\r\n      company: data.company,\r\n      city: data.city,\r\n      zip: data.zip,\r\n      phone: data.phone,\r\n    });\r\n  };\r\n\r\n  const onError = (data) => {\r\n    notifyError(data.message);\r\n  };\r\n\r\n  return (\r\n    <SectionContainer>\r\n      <SectionSubtitle>Shipping Address</SectionSubtitle>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          line1: \"\",\r\n          line2: \"\",\r\n          company: \"\",\r\n          city: \"\",\r\n          zip: \"\",\r\n          phone: \"\",\r\n        }}\r\n        validationSchema={ShippingSchema}\r\n        onSubmit={(values, { resetForm }) => {\r\n          onSubmit(values);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <FormSection>\r\n            <Form>\r\n              <InputSection>\r\n                <InputContainer>\r\n                  <LabelInner className=\"single-field\">\r\n                    <FormLabel>\r\n                      Country <span>*</span>\r\n                    </FormLabel>\r\n                    <StyledCountryDropdown\r\n                      name=\"country\"\r\n                      value={country}\r\n                      onChange={(e) => setCountry(e)}\r\n                      required\r\n                    />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n                <InputGroup>\r\n                  <InputContainer>\r\n                    <LabelInner>\r\n                      <FormLabel>\r\n                        First Name <span>*</span>\r\n                      </FormLabel>\r\n                      {errors.firstName && touched.firstName ? (\r\n                        <InputError>{errors.firstName}</InputError>\r\n                      ) : null}\r\n                      <FormInput type=\"text\" name=\"firstName\" required />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                  <InputContainer>\r\n                    <LabelInner>\r\n                      <FormLabel>\r\n                        Last Name <span>*</span>\r\n                      </FormLabel>\r\n                      {errors.lastName && touched.lastName ? (\r\n                        <InputError>{errors.lastName}</InputError>\r\n                      ) : null}\r\n                      <FormInput type=\"text\" name=\"lastName\" required />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputContainer>\r\n                    <LabelInner className=\"single-field\">\r\n                      <FormLabel>\r\n                        Address <span>*</span>\r\n                      </FormLabel>\r\n                      {errors.line1 && touched.line1 ? (\r\n                        <InputError>{errors.line1}</InputError>\r\n                      ) : null}\r\n                      <FormInput type=\"text\" name=\"line1\" required />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                </InputGroup>\r\n                <InputContainer>\r\n                  <LabelInner className=\"single-field\">\r\n                    <FormLabel>Appartments/Suite/Building(optional)</FormLabel>\r\n                    {errors.line2 && touched.line2 ? (\r\n                      <InputError>{errors.line2}</InputError>\r\n                    ) : null}\r\n                    <FormInput type=\"text\" name=\"line2\" />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n                <InputContainer>\r\n                  <LabelInner className=\"single-field\">\r\n                    <FormLabel>Company Name(optional)</FormLabel>\r\n                    {errors.company && touched.company ? (\r\n                      <InputError>{errors.company}</InputError>\r\n                    ) : null}\r\n                    <FormInput type=\"text\" name=\"company\" />\r\n                  </LabelInner>\r\n                </InputContainer>\r\n                <InputGroup>\r\n                  <InputContainer>\r\n                    <LabelInner>\r\n                      <FormLabel>\r\n                        Suburb/City <span>*</span>\r\n                      </FormLabel>\r\n                      {errors.city && touched.city ? (\r\n                        <InputError>{errors.city}</InputError>\r\n                      ) : null}\r\n                      <FormInput type=\"text\" name=\"city\" required />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                  <InputContainer>\r\n                    <LabelInner>\r\n                      <FormLabel>\r\n                        State/Province <span>*</span>\r\n                      </FormLabel>\r\n                      <StyledRegionDropdown\r\n                        country={country}\r\n                        value={state}\r\n                        onChange={(e) => setState(e)}\r\n                        name=\"state\"\r\n                        required\r\n                      />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                  <InputContainer>\r\n                    <LabelInner>\r\n                      <FormLabel>\r\n                        Postal Code <span>*</span>\r\n                      </FormLabel>\r\n                      {errors.zip && touched.zip ? (\r\n                        <InputError>{errors.zip}</InputError>\r\n                      ) : null}\r\n                      <FormInput\r\n                        type=\"number\"\r\n                        name=\"zip\"\r\n                        min=\"1\"\r\n                        max=\"100000\"\r\n                        required\r\n                      />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                  <InputContainer>\r\n                    <LabelInner>\r\n                      <FormLabel>\r\n                        Phone Number <span>*</span>\r\n                      </FormLabel>\r\n                      {errors.phone && touched.phone ? (\r\n                        <InputError>{errors.phone}</InputError>\r\n                      ) : null}\r\n                      <FormInput type=\"text\" name=\"phone\" required />\r\n                    </LabelInner>\r\n                  </InputContainer>\r\n                </InputGroup>\r\n              </InputSection>\r\n              <BtnSubmit type=\"submit\">Create order</BtnSubmit>\r\n            </Form>\r\n          </FormSection>\r\n        )}\r\n      </Formik>\r\n    </SectionContainer>\r\n  );\r\n};\r\n\r\nexport default CheckoutContent;\r\n","import Layout from \"../../components/Layout\";\r\nimport CheckoutContent from \"../../features/CheckoutContent\";\r\n\r\nconst Checkout = () => {\r\n  return (\r\n    <Layout navTitle=\"Checkout\">\r\n      <CheckoutContent />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"names":["HeaderContainer","styled","_templateObject","_taggedTemplateLiteral","Logo","_templateObject2","logo","Navigation","_templateObject3","NavList","_templateObject4","ListItem","_templateObject5","StyledLink","Link","_templateObject6","LinkButton","_templateObject7","_useContext","useContext","PopupContext","setOpenPopup","setClickedLink","_jsxs","children","_jsx","to","navLinks","_ref","id","title","path","isButton","onClick","e","target","textContent","HeaderNavContainer","Title","Cranches","_ref$title","pathes","el","navTitle","isOpenPopup","_Fragment","Header","HeaderNav","NavPopup","FooterNav","Footer","SectionContainer","SectionSubtitle","FormSection","StyledCountryDropdown","CountryDropdown","StyledRegionDropdown","RegionDropdown","ShippingSchema","Yup","shape","firstName","required","lastName","line1","line2","company","city","zip","phone","_useState","useState","_useState2","_slicedToArray","country","setCountry","_useState3","_useState4","state","setState","_useState5","_useState6","cartItemsTitle","setCartItemsTitle","_useState7","first_name","last_name","address1","address2","_useState8","setUserInfo","_useRequestService","useRequestService","getUserInfo","createOrder","total","CartContext","navigate","useNavigate","useEffect","onCheckUser","onGetTitles","localStorage","getItem","titles","JSON","parse","map","jwt_decode","user_id","then","onResolve","catch","onError","onCreate","data","notifySuccses","message","removeItem","setTimeout","notifyError","Formik","initialValues","validationSchema","onSubmit","values","resetForm","orderData","items","toString","address","fullName","totalPrice","_ref2","errors","touched","Form","InputSection","InputContainer","LabelInner","className","FormLabel","name","value","onChange","InputGroup","InputError","FormInput","type","min","max","BtnSubmit","Layout","CheckoutContent"],"sourceRoot":""}